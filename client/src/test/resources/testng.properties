## Developer test ng properties (convenient way to run separate test without suite) ##
swdResource=${swd.resource}
userId1=SMan
userId=${auth.user.uid}
userSecret=${auth.user.password}
userId2=${auth.user2.uid}
userSecret2=${auth.user2.password}
userInum=${auth.user.inum}
userEmail=${auth.user.email}
clientId=${auth.client.id}
clientSecret=${auth.client.secret}
redirectUri=https://${test.server.name}/jans-auth-rp/home.htm
redirectUris=https://${test.server.name}/jans-auth-rp/home.htm https://client.example.com/cb https://client.example.com/cb1 https://client.example.com/cb2
#redirectUris=https://${test.server.name}/jans-auth-rp/home.htm https://client.example.com/cb https://client.example.com/cb1 https://client.example.com/cb2 https://openid.implicit.client.test/login-callback.html
logoutUri=https://${test.server.name}/jans-auth-rp/home.htm
postLogoutRedirectUri=https://client.example.com/pl
initiateLoginUri=https://client.example.com/start-3rd-party-initiated-sso
hostnameVerifier=default
## By enabling this block, you require a place to publish files via HTTP or HTTPS
#requestFileBasePath=/var/www/html/Jans Auth
requestFileBaseUrl=http://localhost/jans-auth
sectorIdentifierUri=https://${test.server.name}/jans-auth/sectoridentifier/${sector.identifier.id}
#sectorIdentifierUri=https://${test.server.name}/sectoridentifier/${sector.identifier.id}

umaMetaDataUrl=https://${test.server.name}/jans-auth/restv1/uma2-configuration
umaUserId=${uma.user.uid}
umaUserSecret=${uma.user.password}
umaPatClientId=${uma.pat.client.id}
umaPatClientSecret=${uma.pat.client.secret}
umaRedirectUri=https://client.example.com/cb?foo=bar
umaClaimsRedirectUri=https://client.example.com/cb?foo=bar

## Client Resources
dnName=CN=Jans Auth CA Certificates
#keyStoreFile=/Users/JAVIER/tmp/mytestkeystore
keyStoreFile=${clientKeyStoreFile}
keyStoreSecret=${clientKeyStoreSecret}
clientJwksUri=https://${test.server.name}/jans-auth-client/test/resources/jwks.json
#clientJwksUri=http://localhost/jans-auth-client/test/resources/jwks.json
#clientJwksUri=https://ce.gluu.test/resources/jwks.json
RS256_keyId=29fb8d7e-8a82-4e62-9af7-ec0fab8f908c_sig_rs256
RS384_keyId=423afc40-db85-47db-bcbe-e342c9191eee_sig_rs384
RS512_keyId=02b56c1f-703d-4145-a4d6-1dba4bb961dd_sig_rs512
ES256_keyId=e749921d-f29c-4d29-ad4a-5751db69bdc2_sig_es256
ES256K_keyId=48b6f73b-20e7-41f9-abba-1ec967b6b854_sig_es256k
ES384_keyId=37039610-90b1-46e3-a09c-2eec006bb3e1_sig_es384
ES512_keyId=41e297b4-be36-4ab7-ab20-b253902db3a9_sig_es512
PS256_keyId=ef17605a-1c40-4bc9-9d8d-6c3718b9ce6d_sig_ps256
PS384_keyId=6d96327e-0089-4571-b1f8-c3c4575b21e8_sig_ps384
PS512_keyId=5f2b4d67-63b9-4e0d-b0d4-724943397387_sig_ps512
Ed25519_keyId=755cc026-6bc7-4211-ba75-98fee020ec20_sig_ed25519
Ed448_keyId=ed09a1dd-1533-4a4e-81cf-d7613167be21_sig_ed448
RSA1_5_keyId=238125ca-3c4c-4bfe-a725-3df076198777_enc_rsa1_5
RSA_OAEP_keyId=f81ee860-f093-4157-bf67-637d2efddf9c_enc_rsa-oaep

# Form Interaction
loginFormUsername = loginForm:username
loginFormPassword = loginForm:password
loginFormLoginButton = loginForm:loginButton
authorizeFormAllowButton = authorizeForm:allowButton
authorizeFormDoNotAllowButton = authorizeForm:doNotAllowButton

# CIBA
backchannelClientNotificationEndpoint = https://${test.server.name}/jans-auth-rp/home.htm
backchannelUserCode = 59b335fb-a2df-4275-be43-1b8d3cc9a5c5